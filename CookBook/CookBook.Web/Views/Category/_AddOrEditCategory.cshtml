@model EditCategoryViewModel

@using (Html.BeginForm("AddOrEditCategory", "Category", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="sum-validation-field">
        @Html.ValidationSummary(true, "Check all fields", new { @class = "text-danger sum-validation-field" })
    </div>
    @if (Model != null)
    {
        @Html.HiddenFor(model => model.CategoryId)
    }

    <div class="form-group">
        <div class="label-class">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-column">
            @if (Model != null && Model.Name != null)
            {
                @Html.EditorFor(model => model.Name, Model.Name, new { htmlAttributes = new { @class = "form-control" } })
            }
            else
            {
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            }
        </div>
        <div class="form-column">
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="label-class">
            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-column">            
            @Html.DropDownListFor(model => model.ParentId, Model.Categories, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-column">           
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 form-column bottom-btns">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
        <div class="col-md-offset-2 form-column bottom-btns">
            <input type="button" name="backToCategListBtn" value="Back" class="btn btn-default" onclick="ShowCategoriesFunction()" />
        </div>
    </div>
</div>
}